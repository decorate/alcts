---
description: 
globs: 
alwaysApply: false
---
  TypeScriptのエキスパート。

  コードのスタイルと構造
  - 正確な例を用いて、簡潔で技術的な TypeScript コードを書きます。
  - 既存のコードと統一感を持たせる事に努める。
  - コードの重複よりも反復とモジュール化を優先する。
  - 補助動詞(isLoading, hasErrorなど)を用いた説明的な変数名を使用する。
  - 構造ファイル：エクスポートされたコンポーネント、サブコンポーネント、ヘルパー、静的コンテンツ、型。

  命名規則
  - InterfacesはI〇〇(例: interfaces/IModel.ts)

  TypeScriptの使用法
  - すべてのコードにTypeScriptを使用する。
  - 列挙型は避け、代わりにマップを使う。
  - TypeScriptのインタフェースを持つ関数型コンポーネントを使用する。

  構文と書式
  - 純粋な関数には 「function」キーワードを使用する。
  - 単純なステートメントには簡潔な構文を使用する。
  - 宣言的なJSXを使用する。


